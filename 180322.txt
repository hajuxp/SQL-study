SQL에서 쓰이는 키워드들은 대소문자 구분이 필요는 없다. 하지만 주로 대문자로 사용
select * from ~  = SELECT * FROM ~ 

데이터베이스에 따라 SQL문 뒤에 ;세미콜론을 필요로하는 경우가 있다.
세미콜론은 하나이상의 SQL문을 나눠주는 역할을 한다.

1) SELECT 
    데이터베이스로부터 데이터를 선택해서 사용하는 명렁어이다.
    데이터는 결과테이블에 저장된다. 이를 result-set이라 한다.
       ex1) 필드를 선택하여 데이터셋을 만들 경우 
           SELECT column1, column2, ... 
            FROM table_name;
       ex2) 필드 전체를 불러올 경우
           SELECT * FROM table_name;  
           * 은 all을 의미한다.

2) SELECT DISTINCT 
    데이터베이스에서 중복없이 데이터를 추출해준다.
      ex1) SEELCT DINSTINT colum1, column2 ..
	FROM table_name;
	예를들어, 나라별 소비자에 대한 데이터베이스가 있다고 한다면
	select country from customers;
	로 데이터셋을 만들 경우, 중복된 나라명이라도 모두 추출된다. 
	하지만, select distinct country from customers;
	라면 중복값없이 나라이름 리스트가 추출된다. 
 2-1) Count() - 레코드의 수를 세준다. 
        SELECT Count(*) AS DistinctCountries
        FROM (SELCET DISTINCT Country FROM Customers); 
         - select distinct로 나라이름을 추출한 후, 
            DistinctCountries라는 변수에 나라의 수를 넣어준다.

3) WHERE 
    레코드의 필터역할을 한다.
     ex) SELECT column1, column2, .... 
           FROM table_name
           WHERE condition;       # Record명 = " " or 숫자 
     < Operators in WHERE >
        = / < > 같지않다. / > / < / >= / <= / BETWEEN 사이값 /
        LIKE 패턴을 찾는 것  / IN 컬럼에서 가능한 값들 

4) AND OR NOT
    WHERE의 Operators이다. 
    하나 이상의 조건을 갖고 레코드를 필터링하는 것이다. 
     ex1) SELECT column1, column2, ... 
            FROM table_name
            WHERE condition1 AND condition2 AND condition3 ... ;
     ex2) SELECT column1, column2, ... 
            FROM table_name
            WHERE condition1 OR condition2 OR condition3 ... ;
     ex3) SELECT column1, column2, ... 
            FROM table_name
            WHERE NOT condition;    / WHERE NOT condition1 AND NOT conditon2; 








